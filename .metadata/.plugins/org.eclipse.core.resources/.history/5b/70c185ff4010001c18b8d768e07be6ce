<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 외부 패키지에 속한 파일을 사용하려면 자바 코드에서는 import 구문을 이용했습니다.
	그러나, 스프링 빈컨테이너 내부에서는 컴포넌트 스캔이라는것을 이용하거나, bean 태그를 이용합니다.  -->
	<!-- 
	<bean id="singer" class="org.ict.controller.di.classfile.Singer"></bean>	
	
	<bean id="stage" class="org.ict.controller.di.classfile.Stage"> -->
		<!-- stage는 생성자에서 singer를 요청하기 때문에, bean 태그 사이에
		singer를 넣을 수 있도록 constructor-arg 태그를 추가합니다. -->
	<!-- 	<constructor-arg ref="singer" />
	</bean> -->
	
	<!-- broadcast도 공장에 주문해보세요. -->
	<!--<bean id="broadcast" class="org.ict.controller.di.classfile.Broadcast">
		<constructor-arg ref="stage" />
	</bean> -->		
		
		
	<!-- 컴포넌트 스캔 방식
	컴포넌트 스캔은 어노테이션과 스캔 범위만으로 처리합니다. 
	타겟 클래스들이 모여있는 패키지명을 아래 base-package에 적어줍니다.
	그럼 먼저 Singer부터 시작해서 순서대로 컴포넌트 스캔을 해보겠습니다.-->
	<context:component-scan base-package="org.ict.controller.di.classfile" />
		
</beans>
